import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as c,c as d,a as e,b as o,d as n,w as r,e as t}from"./app-DAOD0aSW.js";const p={},h=e("h1",{id:"contributing",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#contributing"},[e("span",null,"CONTRIBUTING")])],-1),u={href:"https://ocelot.social",target:"_blank",rel:"noopener noreferrer"},m=e("h2",{id:"getting-set-up",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#getting-set-up"},[e("span",null,"Getting Set Up")])],-1),g={href:"https://discord.gg/AJSX9DCSUA",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/Ocelot-Social-Community/Ocelot-Social/issues",target:"_blank",rel:"noopener noreferrer"},f={href:"https://app.zenhub.com/workspaces/ocelotsocial-5fb21ff922cb410015dd6535/board?filterLogic=any&repos=301151089",target:"_blank",rel:"noopener noreferrer"},k=e("p",null,"We also can have pair programming sessions for you! We feel this is often the best way to get to know both the project and the team. Most developers are also available for spontaneous sessions.",-1),v=e("h2",{id:"development-flow",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#development-flow"},[e("span",null,"Development Flow")])],-1),w={href:"https://app.zenhub.com/workspaces/ocelotsocial-5fb21ff922cb410015dd6535/board?filterLogic=any&repos=301151089",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/Ocelot-Social-Community/Ocelot-Social/issues",target:"_blank",rel:"noopener noreferrer"},y=e("code",null,"good first issue",-1),x={href:"https://discord.gg/AJSX9DCSUA",target:"_blank",rel:"noopener noreferrer"},T=e("p",null,"This is how we solve bugs and implement features, step by step:",-1),S=e("li",null,"We find an issue we want to work on, usually during the sprint planning but as an open source contributor this can happen at any time.",-1),C=e("li",null,"We communicate with the team to see if the issue is still available. (When you comment on an issue but don't get an answer there within 1-2 days try to mention @Ocelot-Social-Community/core-team to make sure we check in.)",-1),q=e("li",null,"We make sure we understand the issue in detail ‚Äì what problem is it solving and how should it be implemented?",-1),D=e("code",null,"In Progress",-1),I={href:"https://app.zenhub.com/workspaces/ocelotsocial-5fb21ff922cb410015dd6535/board?filterLogic=any&repos=301151089",target:"_blank",rel:"noopener noreferrer"},A=t("<li>We start working on it in a <code>new branch</code> and open a <code>pull request</code> prefixed with <code>[WIP]</code> (work in progress) to which we regularly push our changes.</li><li>When questions come up we clarify them with the team (directly in the issue on Github).</li><li>When we are happy with our work and our PR is passing all tests we remove the <code>[WIP]</code> from the PR description and ask for reviews (if you&#39;re not sure who to ask there is @Ocelot-Social-Community/core-team which pings all core developers).</li><li>We then incorporate the suggestions from the reviews into our work and once it has been approved it can be merged into master!</li>",4),P=e("p",null,"Every pull request needs to:",-1),W=e("ul",null,[e("li",null,"fix an issue (if there is something you want to work on but there is no issue for it, create one first and discuss it with the team)"),e("li",null,"include tests for the code that is added or changed"),e("li",null,"pass all tests (linter, backend, webapp, code coverage, end-to-end)"),e("li",null,"be approved by at least 1 developer who is not the owner of the PR (when more than 10 files were changed it needs 2 approvals)")],-1),M=e("h2",{id:"contribution-flow-for-open-source-contributors",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#contribution-flow-for-open-source-contributors"},[e("span",null,"Contribution Flow For Open Source Contributors")])],-1),O=e("h2",{id:"the-team",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#the-team"},[e("span",null,"The Team")])],-1),B=e("p",null,"There are many volunteers all around the world helping us build this network and without their contributions we wouldn't be where we are today. Big thank you to all of you!",-1),R={href:"https://discord.gg/AJSX9DCSUA",target:"_blank",rel:"noopener noreferrer"},U=t('<ul><li>Ulf (@ulfgebhardt)</li><li>Moriz (@Mogge)</li><li>Wolle (@Tirokk)</li><li>Alex (@ogerly)</li><li>Hannes (@elweyn5803)</li><li>Mathias (@mahula)</li><li>Markus (@maeckes#1133)</li></ul><h2 id="meetings-and-pair-programming-sessions" tabindex="-1"><a class="header-anchor" href="#meetings-and-pair-programming-sessions"><span>Meetings and Pair Programming Sessions</span></a></h2><p>Times below refer to <strong>German Time</strong> ‚Äì that&#39;s CET (GMT+1) in winter and CEST (GMT+2) in summer ‚Äì because most ocelot.social Community core team members are living in Germany.</p><p>Daily standup</p>',4),N=e("li",null,"every Monday‚ÄìThursday 11:30 am (german time see above üëÜüèº)",-1),z={href:"https://discord.gg/AJSX9DCSUA",target:"_blank",rel:"noopener noreferrer"},G=e("code",null,"Office Cube",-1),F=e("li",null,"all contributors welcome!",-1),L=e("li",null,"everybody shares what they are working on and asks for help if they are blocked",-1),E=e("h2",{id:"philosophy",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#philosophy"},[e("span",null,"Philosophy")])],-1),j={href:"http://www.extremeprogramming.org/rules/collective.html",target:"_blank",rel:"noopener noreferrer"},V=e("ul",null,[e("li",null,"developers can make contributions to other people's PRs (after checking in with them)"),e("li",null,"we avoid blocking because someone else isn't working, so we sometimes take over PRs from other developers"),e("li",null,"everyone should always push their code to branches so others can see it")],-1),$={href:"https://www.busfaktor.org/en",target:"_blank",rel:"noopener noreferrer"},J=t('<p>We use pair programming sessions as a tool for knowledge sharing. We can learn a lot from each other and only by sharing what we know and overcoming challenges together can we grow as a team and truly own this project collectively.</p><p>As a volunteer you have no commitment except your own self development and your awesomeness by contributing to this free and open-source software project. Cheers to you!</p><h2 id="programming" tabindex="-1"><a class="header-anchor" href="#programming"><span>Programming</span></a></h2><h3 id="localization" tabindex="-1"><a class="header-anchor" href="#localization"><span>Localization</span></a></h3><h4 id="quotation-marks" tabindex="-1"><a class="header-anchor" href="#quotation-marks"><span>Quotation Marks</span></a></h4><p>The following characters are different from the programming quotation mark:</p><p><code>&quot;</code> or <code>\\&quot;</code></p><p>Please copy and paste the following quotes for the languages:</p>',8),X=e("li",null,"de: ‚ÄûDies ist ein Beispielsatz.‚Äú",-1),Y={href:"https://grammar.collinsdictionary.com/easy-learning/when-do-you-use-quotation-marks-or-in-english",target:"_blank",rel:"noopener noreferrer"},Z=t(`<h2 id="docker-‚Äì-more-closely" tabindex="-1"><a class="header-anchor" href="#docker-‚Äì-more-closely"><span>Docker ‚Äì More Closely</span></a></h2><h3 id="apple-silicon-platform" tabindex="-1"><a class="header-anchor" href="#apple-silicon-platform"><span>Apple Silicon Platform</span></a></h3><p><em><strong>ATTENTION:</strong> For using Docker commands in Apple Silicon environments!</em></p><h4 id="environment-variable-for-apple-silicon-platform-m1-m2-chips" tabindex="-1"><a class="header-anchor" href="#environment-variable-for-apple-silicon-platform-m1-m2-chips"><span>Environment Variable For Apple Silicon Platform (M1, M2 Chips)</span></a></h4><p>If you encounter trouble building the docker containers on an Apple M1 chip you can try to explicitly define the target platform docker builds and pulls images for:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># set env variable for your shell</span>
$ <span class="token builtin class-name">export</span> <span class="token assign-left variable">DOCKER_DEFAULT_PLATFORM</span><span class="token operator">=</span>linux/amd64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Or alternatively use a <code>YAML</code> docker compose overwrite file with <code>platform: linux/amd64</code>.</p><h3 id="analyzing-docker-builds" tabindex="-1"><a class="header-anchor" href="#analyzing-docker-builds"><span>Analyzing Docker Builds</span></a></h3>`,8),H={href:"https://github.com/wagoodman/dive",target:"_blank",rel:"noopener noreferrer"},K=t(`<p>The <code>dive build</code> command is exactly the right one to fulfill what we are looking for. We can use it just like the <code>docker build</code> command and get an analysis afterwards.</p><p>So, in our main folder, we use it in the following way:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># in main folder</span>
$ dive build <span class="token parameter variable">--target</span> <span class="token operator">&lt;</span>layer-name<span class="token operator">&gt;</span> <span class="token parameter variable">-t</span> <span class="token string">&quot;ocelotsocialnetwork/&lt;app-name&gt;:local-&lt;layer-name&gt;&quot;</span> --build-arg <span class="token assign-left variable">BBUILD_DATE</span><span class="token operator">=</span><span class="token string">&quot;&lt;build-date&gt;&quot;</span> --build-arg <span class="token assign-left variable">BBUILD_VERSION</span><span class="token operator">=</span><span class="token string">&quot;&lt;build-version&gt;&quot;</span> --build-arg <span class="token assign-left variable">BBUILD_COMMIT</span><span class="token operator">=</span><span class="token string">&quot;&lt;build-commit&gt;&quot;</span> <span class="token operator">&lt;</span>app-folder-name-or-dot<span class="token operator">&gt;</span>/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>The build arguments are optional.</p><p>For the specific applications, we use them as follows.</p><h4 id="backend" tabindex="-1"><a class="header-anchor" href="#backend"><span>Backend</span></a></h4><h5 id="production-for-backend" tabindex="-1"><a class="header-anchor" href="#production-for-backend"><span>Production For Backend</span></a></h5><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># in main folder</span>
$ dive build <span class="token parameter variable">--target</span> production <span class="token parameter variable">-t</span> <span class="token string">&quot;ocelotsocialnetwork/backend:local-production&quot;</span> backend/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="development-for-backend" tabindex="-1"><a class="header-anchor" href="#development-for-backend"><span>Development For Backend</span></a></h5><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># in main folder</span>
$ dive build <span class="token parameter variable">--target</span> development <span class="token parameter variable">-t</span> <span class="token string">&quot;ocelotsocialnetwork/backend:local-development&quot;</span> backend/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="webapp" tabindex="-1"><a class="header-anchor" href="#webapp"><span>Webapp</span></a></h4><h5 id="production-for-webapp" tabindex="-1"><a class="header-anchor" href="#production-for-webapp"><span>Production For Webapp</span></a></h5><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># in main folder</span>
$ dive build <span class="token parameter variable">--target</span> production <span class="token parameter variable">-t</span> <span class="token string">&quot;ocelotsocialnetwork/webapp:local-production&quot;</span> webapp/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="development-for-webapp" tabindex="-1"><a class="header-anchor" href="#development-for-webapp"><span>Development For Webapp</span></a></h5><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># in main folder</span>
$ dive build <span class="token parameter variable">--target</span> development <span class="token parameter variable">-t</span> <span class="token string">&quot;ocelotsocialnetwork/webapp:local-development&quot;</span> webapp/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,15);function Q(ee,oe){const a=i("ExternalLinkIcon"),s=i("RouteLink");return c(),d("div",null,[h,e("p",null,[o("Thank you so much for thinking of contributing to the "),e("a",u,[o("ocelot.social"),n(a)]),o(" project! It's awesome you're here, we really appreciate it. :-)")]),m,e("p",null,[o("Instructions for how to install all the necessary software and some code guidelines can be found in our main "),n(s,{to:"/"},{default:r(()=>[o("Readme")]),_:1}),o(" or in our "),n(s,{to:"/SUMMARY.html"},{default:r(()=>[o("documentation")]),_:1}),o(".")]),e("p",null,[o("To get you started we recommend that you join forces with a regular contributor. Please join "),e("a",g,[o("our Discord instance"),n(a)]),o(" to chat with developers or just get in touch directly on an issue on either "),e("a",b,[o("Github"),n(a)]),o(" or "),e("a",f,[o("Zenhub"),n(a)]),o(":")]),k,v,e("p",null,[o("We operate in two week sprints that are planned, estimated and prioritised on "),e("a",w,[o("Zenhub"),n(a)]),o(". All issues are also linked to and synced with "),e("a",_,[o("Github"),n(a)]),o(". Look for the "),y,o(" label if you're not sure where to start!")]),e("p",null,[o("We try to discuss all questions directly related to a feature or bug in the respective issue, in order to preserve it for the future and for other developers. We use "),e("a",x,[o("Discord"),n(a)]),o(" for real-time communication.")]),T,e("ol",null,[S,C,q,e("li",null,[o("We assign ourselves to the issue and move it to "),D,o(" on "),e("a",I,[o("Zenhub"),n(a)]),o(".")]),A]),P,W,M,e("p",null,[o("See "),n(s,{to:"/#contributing"},{default:r(()=>[o("contributing in main README.md")]),_:1})]),O,B,e("p",null,[o("You can talk to our core team on "),e("a",R,[o("Discord"),n(a)]),o(". And on Github you will mostly run into our core developers:")]),U,e("ul",null,[N,e("li",null,[o("in our "),e("a",z,[o("Discord"),n(a)]),o(),G]),F,L]),E,e("p",null,[o("We practice "),e("a",j,[o("collective code ownership"),n(a)]),o(" rather than strong code ownership, which means that:")]),V,e("p",null,[o("We believe in open source contributions as a learning experience ‚Äì everyone is welcome to join our team of volunteers and to contribute to the project, no matter their background or level of experience. To support your learning experience we founded the charity association "),e("a",$,[o("busFaktor() e.V."),n(a)]),o(".")]),J,e("ul",null,[X,e("li",null,[o("en: ‚ÄúThis is a sample sentence.‚Äù "),e("ul",null,[e("li",null,[o("See "),e("a",Y,[o("https://grammar.collinsdictionary.com/easy-learning/when-do-you-use-quotation-marks-or-in-english"),n(a)])])])])]),Z,e("p",null,[o("To analyze a Docker build, there is a wonderful tool called "),e("a",H,[o("dive"),n(a)]),o(". Please sponsor if you're using it!")]),K])}const te=l(p,[["render",Q],["__file","CONTRIBUTING.html.vue"]]),se=JSON.parse(`{"path":"/CONTRIBUTING.html","title":"CONTRIBUTING","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Getting Set Up","slug":"getting-set-up","link":"#getting-set-up","children":[]},{"level":2,"title":"Development Flow","slug":"development-flow","link":"#development-flow","children":[]},{"level":2,"title":"Contribution Flow For Open Source Contributors","slug":"contribution-flow-for-open-source-contributors","link":"#contribution-flow-for-open-source-contributors","children":[]},{"level":2,"title":"The Team","slug":"the-team","link":"#the-team","children":[]},{"level":2,"title":"Meetings and Pair Programming Sessions","slug":"meetings-and-pair-programming-sessions","link":"#meetings-and-pair-programming-sessions","children":[]},{"level":2,"title":"Philosophy","slug":"philosophy","link":"#philosophy","children":[]},{"level":2,"title":"Programming","slug":"programming","link":"#programming","children":[{"level":3,"title":"Localization","slug":"localization","link":"#localization","children":[]}]},{"level":2,"title":"Docker ‚Äì More Closely","slug":"docker-‚Äì-more-closely","link":"#docker-‚Äì-more-closely","children":[{"level":3,"title":"Apple Silicon Platform","slug":"apple-silicon-platform","link":"#apple-silicon-platform","children":[]},{"level":3,"title":"Analyzing Docker Builds","slug":"analyzing-docker-builds","link":"#analyzing-docker-builds","children":[]}]}],"git":{"createdTime":1729782505000,"updatedTime":1729782505000,"contributors":[{"name":"Wolfgang Hu√ü","email":"wolle.huss@pjannto.com","commits":1}]},"readingTime":{"minutes":5.68,"words":1703},"filePathRelative":"CONTRIBUTING.md","localizedDate":"October 24, 2024","excerpt":"\\n<p>Thank you so much for thinking of contributing to the <a href=\\"https://ocelot.social\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">ocelot.social</a> project! It's awesome you're here, we really appreciate it. :-)</p>\\n<h2>Getting Set Up</h2>\\n<p>Instructions for how to install all the necessary software and some code guidelines can be found in our main <a href=\\"/\\" target=\\"_blank\\">Readme</a> or in our <a href=\\"/SUMMARY.html\\" target=\\"_blank\\">documentation</a>.</p>"}`);export{te as comp,se as data};
