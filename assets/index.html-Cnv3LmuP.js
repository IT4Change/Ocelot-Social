import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as r,a as e,b as n,d as a,w as d,e as t}from"./app-DAOD0aSW.js";const p={},m=e("h1",{id:"neo4j-4-4",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#neo4j-4-4"},[e("span",null,"Neo4j 4.4")])],-1),u={href:"https://neo4j.com/",target:"_blank",rel:"noopener noreferrer"},h=t(`<h2 id="installation-with-docker" tabindex="-1"><a class="header-anchor" href="#installation-with-docker"><span>Installation With Docker</span></a></h2><p>Run:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">docker-compose</span> up
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),b={href:"http://localhost:7474/",target:"_blank",rel:"noopener noreferrer"},k=e("h2",{id:"installation-without-docker",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#installation-without-docker"},[e("span",null,"Installation Without Docker")])],-1),v={href:"https://neo4j.com/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/neo4j-contrib/neo4j-apoc-procedures",target:"_blank",rel:"noopener noreferrer"},f={href:"https://neo4j.com/download-center/#releases",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases",target:"_blank",rel:"noopener noreferrer"},_=e("code",null,".jar",-1),x=e("code",null,"plugins",-1),y=t(`<p>Then make sure to allow Apoc procedures by adding the following line to your Neo4j configuration (<code>conf/neo4j.conf</code>):</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>dbms.security.procedures.unrestricted=apoc.*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="alternatives" tabindex="-1"><a class="header-anchor" href="#alternatives"><span>Alternatives</span></a></h3>`,3),w={href:"https://neo4j.com/download/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://neo4j.com/download/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://neo4j.com/developer/guide-cloud-deployment/",target:"_blank",rel:"noopener noreferrer"},D={href:"https://neo4j.com/developer/docker/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://aur.archlinux.org/packages/neo4j-community/",target:"_blank",rel:"noopener noreferrer"},$={href:"http://debian.neo4j.org/",target:"_blank",rel:"noopener noreferrer"},A=e("code",null,"backend/.env",-1),I={href:"http://localhost:7474",target:"_blank",rel:"noopener noreferrer"},T=t(`<h2 id="operations-on-neo4j-4-4" tabindex="-1"><a class="header-anchor" href="#operations-on-neo4j-4-4"><span>Operations on Neo4j 4.4</span></a></h2><h3 id="docker-or-docker-compose" tabindex="-1"><a class="header-anchor" href="#docker-or-docker-compose"><span>Docker or Docker Compose</span></a></h3><ul><li>we need to set <code>command: [&quot;tail&quot;, &quot;-f&quot;, &quot;/dev/null&quot;]</code> in the Neo4j block of <code>docker-compose.yml</code> on top level so the Neo4j database is in maintenance mode</li></ul><h3 id="create-neo4j-dump" tabindex="-1"><a class="header-anchor" href="#create-neo4j-dump"><span>Create Neo4j Dump</span></a></h3><p>To create a dump in Neo4j running in a Docker container:</p><ul><li>set the database to maintenance mode, see above</li><li>entering the following commands:</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># connect to the Docker containers Neo4j terminal</span>
$ <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> neo4j <span class="token function">bash</span>
<span class="token comment"># generate Dump</span>
neo4j% neo4j-admin dump <span class="token parameter variable">--to</span><span class="token operator">=</span>/var/lib/neo4j/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F<span class="token variable">)</span></span>-neo4j-dump
<span class="token comment"># exit bash</span>
neo4j% <span class="token builtin class-name">exit</span>
<span class="token comment"># copy the dump out of the running Docker container</span>
$ <span class="token function">docker</span> <span class="token function">cp</span> <span class="token operator">&lt;</span>docker-image-name<span class="token punctuation">(</span><span class="token string">&#39;neo4j&#39;</span><span class="token punctuation">)</span><span class="token operator">&gt;</span>:/var/lib/neo4j/neo4j-dump <span class="token operator">&lt;</span>local-folder-path<span class="token operator">&gt;</span>/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F<span class="token variable">)</span></span>-neo4j-dump
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you need a specific database name, add the option <code>--database=&lt;name&gt;</code> to the command <code>neo4j-admin dump</code>.</p><p>In our deployments there are cases where the database is called <code>neo4j</code> (used by default) and in other cases <code>graph.db</code> (accidentally happened when we loaded the database into a new cluster).</p><h3 id="import-neo4j-dump" tabindex="-1"><a class="header-anchor" href="#import-neo4j-dump"><span>Import Neo4j Dump</span></a></h3><p>To import a dump into Neo4j running in a Docker container:</p><ul><li>set the database to maintenance mode, see above</li><li>entering the following commands:</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># copy the dump into the running Docker container</span>
$ <span class="token function">docker</span> <span class="token function">cp</span> <span class="token operator">&lt;</span>local-folder-path<span class="token operator">&gt;</span>/neo4j-dump <span class="token operator">&lt;</span>docker-image-name<span class="token punctuation">(</span><span class="token string">&#39;neo4j&#39;</span><span class="token punctuation">)</span><span class="token operator">&gt;</span>:/var/lib/neo4j/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F<span class="token variable">)</span></span>-neo4j-dump
<span class="token comment"># connect to the Docker containers Neo4j terminal</span>
$ <span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> neo4j <span class="token function">bash</span>
<span class="token comment"># to load the dump into the database we need the following command in this terminal</span>
neo4j% neo4j-admin load <span class="token parameter variable">--from</span> /var/lib/neo4j/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F<span class="token variable">)</span></span>-neo4j-dump <span class="token parameter variable">--force</span>
<span class="token comment"># leave the terminal by entering</span>
neo4j% <span class="token builtin class-name">exit</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If you need a specific database name, add the option <code>--database=&lt;name&gt;</code> to the command <code>neo4j-admin load</code>. To find out the default database name, see below.</p><h2 id="commands" tabindex="-1"><a class="header-anchor" href="#commands"><span>Commands</span></a></h2><p>Here we describe some rarely used Cypher commands for Neo4j that are needed from time to time:</p><h3 id="index-and-constraint-commands" tabindex="-1"><a class="header-anchor" href="#index-and-constraint-commands"><span>Index And Constraint Commands</span></a></h3><p>If indexes or constraints are missing or not set correctly, the browser search will not work or the database seed for development will not work.</p><p>The indexes and constraints of our database are set in <code>backend/src/db/migrate/store.js</code>. This is where the magic happens.</p><p>It&#39;s called by our <code>prod:migrate init</code> command. This command initializes the Admin user and creates all necessary indexes and constraints in the Neo4j database.</p><p><em><strong>Calls in development</strong></em></p><p>Locally without Docker:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># in backend folder</span>
$ <span class="token function">yarn</span> prod:migrate init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Locally with Docker:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># in main folder</span>
$ <span class="token function">docker</span> compose <span class="token builtin class-name">exec</span> backend <span class="token function">yarn</span> prod:migrate init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>Calls in production</strong></em></p><p>Locally with Docker:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># in main folder</span>
$ <span class="token function">docker</span> compose <span class="token builtin class-name">exec</span> backend /bin/sh <span class="token parameter variable">-c</span> <span class="token string">&quot;yarn prod:migrate init&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>On a server with Kubernetes cluster:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># tested for one backend replica</span>
<span class="token comment"># !!! be aware of the kubectl context !!!</span>
$ kubectl <span class="token parameter variable">-n</span> default <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> <span class="token variable"><span class="token variable">$(</span>kubectl <span class="token parameter variable">-n</span> default get pods <span class="token operator">|</span> <span class="token function">grep</span> ocelot-backend <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{ print $1 }&#39;</span><span class="token variable">)</span></span> -- /bin/sh <span class="token parameter variable">-c</span> <span class="token string">&quot;yarn prod:migrate init&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>Enter and Exit Cypher Shell</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># enter the bash of Neo4j database</span>
$ kubectl <span class="token parameter variable">-n</span> default <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> <span class="token variable"><span class="token variable">$(</span>kubectl <span class="token parameter variable">-n</span> default get pods <span class="token operator">|</span> <span class="token function">grep</span> ocelot-neo4j <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{ print $1 }&#39;</span><span class="token variable">)</span></span> -- <span class="token function">bash</span>
<span class="token comment"># enter Cypher-Shell to send Cypher commands</span>
neo4j<span class="token comment"># cypher-shell</span>

<span class="token comment"># send Cypher commands</span>
cypher-shell<span class="token comment"># &lt; Cypher commands &gt;</span>
<span class="token comment"># exit Cypher-Shell</span>
cypher-shell<span class="token comment"># :exit</span>

<span class="token comment"># exit bash</span>
neo4j<span class="token comment"># exit</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>Cypher commands to show indexes and constraints</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># in browser command line or Cypher shell</span>

<span class="token comment"># show all indexes and constraints</span>
$ :schema

<span class="token comment"># show all indexes</span>
$ CALL db.indexes<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># show all constraints</span>
$ CALL db.constraints<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em><strong>Cypher commands to create and drop indexes and constraints</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># in browser command line or Cypher shell</span>

<span class="token comment"># create indexes</span>
$ CALL db.index.fulltext.createNodeIndex<span class="token punctuation">(</span><span class="token string">&quot;post_fulltext_search&quot;</span>,<span class="token punctuation">[</span><span class="token string">&quot;Post&quot;</span><span class="token punctuation">]</span>,<span class="token punctuation">[</span><span class="token string">&quot;title&quot;</span>, <span class="token string">&quot;content&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
$ CALL db.index.fulltext.createNodeIndex<span class="token punctuation">(</span><span class="token string">&quot;user_fulltext_search&quot;</span>,<span class="token punctuation">[</span><span class="token string">&quot;User&quot;</span><span class="token punctuation">]</span>,<span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span>, <span class="token string">&quot;slug&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
$ CALL db.index.fulltext.createNodeIndex<span class="token punctuation">(</span><span class="token string">&quot;tag_fulltext_search&quot;</span>,<span class="token punctuation">[</span><span class="token string">&quot;Tag&quot;</span><span class="token punctuation">]</span>,<span class="token punctuation">[</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment"># drop an index</span>
$ DROP CONSTRAINT ON <span class="token punctuation">(</span> image:Image <span class="token punctuation">)</span> ASSERT image.url IS UNIQUE

<span class="token comment"># drop all indexes and constraints</span>
$ CALL apoc.schema.assert<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token punctuation">}</span>,true<span class="token punctuation">)</span> YIELD label, key RETURN * <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="database-management-commands" tabindex="-1"><a class="header-anchor" href="#database-management-commands"><span>Database Management Commands</span></a></h3><p><em><strong>Cypher commands to manage databases</strong></em></p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># in browser command line or Cypher shell</span>

<span class="token comment"># show the default database</span>
$ SHOW DEFAULT DATABASE
<span class="token comment"># show all databases</span>
$ SHOW DATABASES
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,39),L=e("code",null,"NEO4J_dbms_default__database",-1),S={href:"https://neo4j.com/docs/operations-manual/4.4/docker/ref-settings/",target:"_blank",rel:"noopener noreferrer"},E=e("p",null,"If a database with this name does not exist, an empty database with this name is created and all other databases remain. You can switch back to an existing database without damaging it.",-1),O=e("p",null,"It seems to be impossible to change the name of an existing database on the fly. To change the name of an existing database, we need to load a dump or restore a backup under a new name in Neo4j.",-1);function R(U,W){const s=o("ExternalLinkIcon"),i=o("RouteLink");return c(),r("div",null,[m,e("p",null,[n("Human Connection is a social network. Using a graph based database which can model nodes and edges natively - a network - feels like an obvious choice. We decided to use "),e("a",u,[n("Neo4j"),a(s)]),n(", the currently most used graph database available. The community edition of Neo4J is Free and Open Source and we try our best to keep our application compatible with the community edition only.")]),h,e("p",null,[n("You can access Neo4J through "),e("a",b,[n("http://localhost:7474/"),a(s)]),n(" for an interactive Cypher shell and a visualization of the graph.")]),k,e("p",null,[n("Install the community edition of "),e("a",v,[n("Neo4j"),a(s)]),n(" along with the plugin "),e("a",g,[n("Apoc"),a(s)]),n(" on your system.")]),e("p",null,[n("To do so, go to "),e("a",f,[n("releases"),a(s)]),n(', choose "Community Server", download the installation files for you operation system and unpack the files.')]),e("p",null,[n("Download "),e("a",j,[n("Neo4j Apoc"),a(s)]),n(" and drop the "),_,n(" file into the "),x,n(" folder of the just extracted Neo4j-Server.")]),y,e("p",null,[n("You can download "),e("a",w,[n("Neo4j Desktop"),a(s)]),n(" and run locally for development, spin up a "),e("a",N,[n("hosted Neo4j Sandbox instance"),a(s)]),n(", run Neo4j in one of the "),e("a",C,[n("many cloud options"),a(s)]),n(", "),e("a",D,[n("spin up Neo4j in a Docker container"),a(s)]),n(", on Arch linux you can install "),e("a",q,[n("neo4j-community from AUR"),a(s)]),n(" or on Debian-based systems install "),e("a",$,[n("Neo4j from the Debian Repository"),a(s)]),n(". Just be sure to update the Neo4j connection string and credentials accordingly in "),A,n(".")]),e("p",null,[n("Start Neo4J and confirm the database is running at "),e("a",I,[n("http://localhost:7474"),a(s)]),n(".")]),T,e("p",null,[n("To set the default database by configuration, use "),L,n(" as an environment variable when starting Neo4j 4.4, see "),e("a",S,[n("Docker specific configuration settings"),a(s)]),n(".")]),E,O,e("p",null,[n("For more information on deployment, see "),a(i,{to:"/deployment/deployment.html#default-database-name"},{default:d(()=>[n("Default Database Name")]),_:1}),n(".")])])}const H=l(p,[["render",R],["__file","index.html.vue"]]),B=JSON.parse('{"path":"/neo4j/","title":"Neo4j 4.4","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Installation With Docker","slug":"installation-with-docker","link":"#installation-with-docker","children":[]},{"level":2,"title":"Installation Without Docker","slug":"installation-without-docker","link":"#installation-without-docker","children":[{"level":3,"title":"Alternatives","slug":"alternatives","link":"#alternatives","children":[]}]},{"level":2,"title":"Operations on Neo4j 4.4","slug":"operations-on-neo4j-4-4","link":"#operations-on-neo4j-4-4","children":[{"level":3,"title":"Docker or Docker Compose","slug":"docker-or-docker-compose","link":"#docker-or-docker-compose","children":[]},{"level":3,"title":"Create Neo4j Dump","slug":"create-neo4j-dump","link":"#create-neo4j-dump","children":[]},{"level":3,"title":"Import Neo4j Dump","slug":"import-neo4j-dump","link":"#import-neo4j-dump","children":[]}]},{"level":2,"title":"Commands","slug":"commands","link":"#commands","children":[{"level":3,"title":"Index And Constraint Commands","slug":"index-and-constraint-commands","link":"#index-and-constraint-commands","children":[]},{"level":3,"title":"Database Management Commands","slug":"database-management-commands","link":"#database-management-commands","children":[]}]}],"git":{"createdTime":1729782505000,"updatedTime":1729782505000,"contributors":[{"name":"Wolfgang Huß","email":"wolle.huss@pjannto.com","commits":1}]},"readingTime":{"minutes":3.49,"words":1048},"filePathRelative":"neo4j/README.md","localizedDate":"October 24, 2024","excerpt":"\\n<p>Human Connection is a social network. Using a graph based database which can\\nmodel nodes and edges natively - a network - feels like an obvious choice. We\\ndecided to use <a href=\\"https://neo4j.com/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Neo4j</a>, the currently most used graph\\ndatabase available. The community edition of Neo4J is Free and Open Source and\\nwe try our best to keep our application compatible with the community edition\\nonly.</p>"}');export{H as comp,B as data};
