import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as d,c as r,a as o,b as e,d as s,e as t}from"./app-DAOD0aSW.js";const a={},c=t('<h1 id="vue-–-code-guidelines" tabindex="-1"><a class="header-anchor" href="#vue-–-code-guidelines"><span>Vue – Code Guidelines</span></a></h1><h2 id="we-use-single-file-components" tabindex="-1"><a class="header-anchor" href="#we-use-single-file-components"><span>We use single-file components</span></a></h2><p>Each component lives in a single file, containing:</p><ul><li>its <code>template</code> (the DOM structure)</li><li>its <code>script</code> (including <code>props</code>, <code>data</code> and <code>methods</code> among other things)</li><li>its <code>style</code> (defining the look of the component)</li></ul>',4),p={href:"https://vuejs.org/v2/guide/single-file-components.html",target:"_blank",rel:"noopener noreferrer"},h=t(`<p>Placed in the same folder are also:</p><ul><li>the test file (e.g. <code>MyComponent.spec.js</code>)</li><li>the storybook file (e.g. <code>MyComponent.story.js</code>)</li></ul><h2 id="we-use-typed-props" tabindex="-1"><a class="header-anchor" href="#we-use-typed-props"><span>We use typed props</span></a></h2><p>Vue.js allows us to define component props either as strings or as objects (with <code>type</code> and <code>default</code> or <code>required</code> values). Always go for the second option!</p><p>Also: only (and always!) define a <code>default</code> for props that are <em>not required</em>.</p><p>Why?</p><ul><li>it makes our code more robust – a warning will be shown when passing a wrong prop type</li><li>it clearly defines the component API and tells other developers how to use it</li></ul><p>It is as easy as writing:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>props: {
  title: {
    type: String,
    required: true,
  },
  image: {
    type: String,
    default: &#39;human-connection-logo.png&#39;,
  },
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),u={href:"https://vuejs.org/v2/guide/components-props.html#Prop-Validation",target:"_blank",rel:"noopener noreferrer"},m=t('<h2 id="we-use-shorthands" tabindex="-1"><a class="header-anchor" href="#we-use-shorthands"><span>We use shorthands</span></a></h2><p>For better readability we prefer</p><ul><li><code>:something</code> over <code>v-bind:something</code></li><li><code>@click</code> over <code>v-on:click</code></li><li><code>#slotSame</code> over <code>v-slot:slotName</code></li><li><code>#default</code> over <code>v-slot</code></li></ul>',3),g={href:"https://vuejs.org/v2/guide/syntax.html#Shorthands",target:"_blank",rel:"noopener noreferrer"},f={href:"https://vuejs.org/v2/guide/components-slots.html#Named-Slots-Shorthand",target:"_blank",rel:"noopener noreferrer"},v=o("h2",{id:"recommended-reads",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#recommended-reads"},[o("span",null,"Recommended reads")])],-1),b={href:"https://pablohpsilva.github.io/vuejs-component-style-guide/#/?id=harness-your-component-props",target:"_blank",rel:"noopener noreferrer"};function _(w,y){const n=l("ExternalLinkIcon");return d(),r("div",null,[c,o("p",null,[e("See the "),o("a",p,[e("Vue.js docs"),s(n)]),e(" for more details.")]),h,o("p",null,[e("For more complex use cases see the "),o("a",u,[e("official Vue.js documentation"),s(n)]),e(".")]),m,o("p",null,[e("Read more in the "),o("a",g,[e("official Vue.js docs"),s(n)]),e(" (for "),o("a",f,[e("slots"),s(n)]),e(")")]),v,o("p",null,[e("The "),o("a",b,[e("Vue.js component style guide"),s(n)]),e(" offers a whole list of best-practices for writing Vue components.")])])}const j=i(a,[["render",_],["__file","vue.html.vue"]]),V=JSON.parse('{"path":"/webapp/vue.html","title":"Vue – Code Guidelines","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"We use single-file components","slug":"we-use-single-file-components","link":"#we-use-single-file-components","children":[]},{"level":2,"title":"We use typed props","slug":"we-use-typed-props","link":"#we-use-typed-props","children":[]},{"level":2,"title":"We use shorthands","slug":"we-use-shorthands","link":"#we-use-shorthands","children":[]},{"level":2,"title":"Recommended reads","slug":"recommended-reads","link":"#recommended-reads","children":[]}],"git":{"createdTime":1729782505000,"updatedTime":1729782505000,"contributors":[{"name":"Wolfgang Huß","email":"wolle.huss@pjannto.com","commits":1}]},"readingTime":{"minutes":0.84,"words":252},"filePathRelative":"webapp/vue.md","localizedDate":"October 24, 2024","excerpt":"\\n<h2>We use single-file components</h2>\\n<p>Each component lives in a single file, containing:</p>\\n<ul>\\n<li>its <code>template</code> (the DOM structure)</li>\\n<li>its <code>script</code> (including <code>props</code>, <code>data</code> and <code>methods</code> among other things)</li>\\n<li>its <code>style</code> (defining the look of the component)</li>\\n</ul>"}');export{j as comp,V as data};
