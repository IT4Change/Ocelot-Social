import{_ as u}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as p,c as h,a as e,b as n,d as s,w as t,e as o}from"./app-DAOD0aSW.js";const m="/assets/screenshot-B31RARyu.png",b={},g=o('<h1 id="webapp" tabindex="-1"><a class="header-anchor" href="#webapp"><span>Webapp</span></a></h1><p><img src="'+m+'" alt="UI Screenshot" loading="lazy"></p><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation"><span>Installation</span></a></h2>',3),v={href:"https://github.com/nvm-sh/nvm",target:"_blank",rel:"noopener noreferrer"},f=e("code",null,"nvm",-1),_=o(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># install Node</span>
$ <span class="token builtin class-name">cd</span> webapp
$ nvm <span class="token function">install</span> v20.12.1
$ nvm use v20.12.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),k={href:"https://yarnpkg.com/en/",target:"_blank",rel:"noopener noreferrer"},y=o(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># install all dependencies</span>
$ <span class="token builtin class-name">cd</span> webapp
$ <span class="token function">yarn</span> <span class="token function">install</span>
<span class="token comment"># or just</span>
$ <span class="token function">yarn</span>
<span class="token comment"># or just later on to use version of &quot;.nvmrc&quot; file</span>
$ nvm use <span class="token operator">&amp;&amp;</span> <span class="token function">yarn</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Copy:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code># in webapp
cp .env.template .env
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Configure the files according to your needs and your local setup.</p><h3 id="build-for-development" tabindex="-1"><a class="header-anchor" href="#build-for-development"><span>Build for Development</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># serve with hot reload at localhost:3000</span>
$ <span class="token function">yarn</span> dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="build-for-production" tabindex="-1"><a class="header-anchor" href="#build-for-production"><span>Build for Production</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># build for production and launch server</span>
$ <span class="token function">yarn</span> build
$ <span class="token function">yarn</span> start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="run-tests" tabindex="-1"><a class="header-anchor" href="#run-tests"><span>Run tests</span></a></h3><p>We ensure the quality of our frontend code by using</p>`,10),w={href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"},x={href:"https://jestjs.io/",target:"_blank",rel:"noopener noreferrer"},S={href:"https://vue-test-utils.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},$={href:"https://storybook.js.org/",target:"_blank",rel:"noopener noreferrer"},N=e("p",null,"After starting the application following the above guidelines, open new terminal windows for each of these commands:",-1),j=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token comment"},"# run eslint"),n(`
$ `),e("span",{class:"token function"},"docker-compose"),n(),e("span",{class:"token builtin class-name"},"exec"),n(" webapp "),e("span",{class:"token function"},"yarn"),n(` lint
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),D=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token comment"},"# run unit tests"),n(`
$ `),e("span",{class:"token function"},"docker-compose"),n(),e("span",{class:"token builtin class-name"},"exec"),n(" webapp "),e("span",{class:"token function"},"yarn"),n(),e("span",{class:"token builtin class-name"},"test"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),M=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token comment"},"# start storybook"),n(`
$ `),e("span",{class:"token function"},"docker-compose"),n(),e("span",{class:"token builtin class-name"},"exec"),n(" webapp "),e("span",{class:"token function"},"yarn"),n(` storybook
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),W=e("p",null,[n("You can then visit the Storybook playground on "),e("code",null,"http://localhost:3002")],-1),A=e("p",null,[n("After starting the application following the above guidelines, open new terminal windows and navigate to the "),e("code",null,"/webapp"),n(" directory for each of these commands:")],-1),B=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token comment"},"# run eslint in /webapp (use option --fix to normalize the files)"),n(`
$ `),e("span",{class:"token function"},"yarn"),n(` lint
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),C=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token comment"},"# run unit tests in /webapp"),n(`
$ `),e("span",{class:"token function"},"yarn"),n(),e("span",{class:"token builtin class-name"},"test"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),R=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token comment"},"# run locales in /webapp (use option --fix to sort the locales)"),n(`
$ `),e("span",{class:"token function"},"yarn"),n(` locales
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),T=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token comment"},"# start storybook in /webapp"),n(`
$ `),e("span",{class:"token function"},"yarn"),n(` storybook
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),I=e("p",null,[n("You can then visit the Storybook playground on "),e("code",null,"http://localhost:3002")],-1),E=e("h2",{id:"maintenance-mode",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#maintenance-mode"},[e("span",null,"Maintenance Mode")])],-1),F=e("h2",{id:"styleguide-migration",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#styleguide-migration"},[e("span",null,"Styleguide Migration")])],-1),L={href:"https://github.com/Ocelot-Social-Community/HC-Styleguide-20201003",target:"_blank",rel:"noopener noreferrer"},O={href:"https://github.com/Ocelot-Social-Community/Ocelot-Social",target:"_blank",rel:"noopener noreferrer"},V=e("code",null,"_new/",-1),U=e("h3",{id:"folder-structure",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#folder-structure"},[e("span",null,"Folder Structure")])],-1),q={href:"https://nuxtjs.org/guide/directory-structure",target:"_blank",rel:"noopener noreferrer"},z=o("<ul><li><strong>assets</strong> contains icons, images and logos in <code>svg</code> format and all shared SCSS files such as <code>tokens</code></li><li><strong>components</strong> separated into two sub-folders: <ul><li><strong>generic</strong> are the generic building blocks of the app â€“ small, reusable and usually not coupled to state</li><li><strong>features</strong> are composed of components but tied to a particular function of the app (e.g. <code>comment</code> or <code>post</code>)</li></ul></li><li><strong>layouts</strong> can use components to create layout templates for pages</li><li><strong>pages</strong> are the entry points for all <code>routes</code> in the app and are composed of layouts, features and components</li></ul>",1);function J(P,H){const a=r("ExternalLinkIcon"),c=r("RouteLink"),d=r("Tabs");return p(),h("div",null,[g,e("p",null,[n("For preparation we need Node and recommend to use "),e("a",v,[n("node version manager"),s(a)]),n(),f,n(" to switch between different local Node versions:")]),_,e("p",null,[n("Install node dependencies with "),e("a",k,[n("yarn"),s(a)]),n(":")]),y,e("ul",null,[e("li",null,[e("a",w,[n("ESLint"),s(a)]),n(" for checking our JavaScript code")]),e("li",null,[e("a",x,[n("Jest"),s(a)]),n(" and "),e("a",S,[n("Vue Test Utils"),s(a)]),n(" to unit test our components")]),e("li",null,[e("a",$,[n("Storybook"),s(a)]),n(" to document and manually test our components in an isolated playground")])]),e("p",null,[n("For more information see our "),s(c,{to:"/webapp/testing.html"},{default:t(()=>[n("frontend testing guide")]),_:1}),n(". Use these commands to run the tests:")]),s(d,{id:"58",data:[{id:"With Docker"},{id:"title Without Docker"}],active:0},{title0:t(({value:l,isActive:i})=>[n("With Docker")]),title1:t(({value:l,isActive:i})=>[n("title Without Docker")]),tab0:t(({value:l,isActive:i})=>[N,j,D,M,W]),tab1:t(({value:l,isActive:i})=>[A,B,C,R,T,I]),_:1}),E,e("p",null,[n("For installing and running the maintenance mode see "),s(c,{to:"/webapp/maintenance/"},{default:t(()=>[n("Maintenance Mode")]),_:1}),n(".")]),F,e("p",null,[n("We are currently in the process of migrating our styleguide components and design tokens from the "),e("a",L,[n("Nitro Styleguide"),s(a)]),n(" into the main "),e("a",O,[n("ocelot.social repository"),s(a)]),n(" and refactoring our components in the process. During this migration, our new components will live in a "),V,n(" folder to separate them from the old, yet untouched components.")]),U,e("p",null,[n("The folder structure we are following is "),e("a",q,[n("prescribed by Nuxt.js"),s(a)]),n(":")]),z])}const K=u(b,[["render",J],["__file","index.html.vue"]]),Q=JSON.parse('{"path":"/webapp/","title":"Webapp","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Installation","slug":"installation","link":"#installation","children":[{"level":3,"title":"Build for Development","slug":"build-for-development","link":"#build-for-development","children":[]},{"level":3,"title":"Build for Production","slug":"build-for-production","link":"#build-for-production","children":[]},{"level":3,"title":"Run tests","slug":"run-tests","link":"#run-tests","children":[]}]},{"level":2,"title":"Maintenance Mode","slug":"maintenance-mode","link":"#maintenance-mode","children":[]},{"level":2,"title":"Styleguide Migration","slug":"styleguide-migration","link":"#styleguide-migration","children":[{"level":3,"title":"Folder Structure","slug":"folder-structure","link":"#folder-structure","children":[]}]}],"git":{"createdTime":1729782505000,"updatedTime":1729782505000,"contributors":[{"name":"Wolfgang HuÃŸ","email":"wolle.huss@pjannto.com","commits":1}]},"readingTime":{"minutes":1.68,"words":504},"filePathRelative":"webapp/README.md","localizedDate":"October 24, 2024","excerpt":"\\n<p></p>\\n<h2>Installation</h2>\\n<p>For preparation we need Node and recommend to use <a href=\\"https://github.com/nvm-sh/nvm\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">node version manager</a> <code>nvm</code> to switch\\nbetween different local Node versions:</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token comment\\"># install Node</span>\\n$ <span class=\\"token builtin class-name\\">cd</span> webapp\\n$ nvm <span class=\\"token function\\">install</span> v20.12.1\\n$ nvm use v20.12.1\\n</code></pre></div>"}');export{K as comp,Q as data};
