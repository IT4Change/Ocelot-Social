import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as r,c as l,a as e,b as t,d as n,e as i}from"./app-DAOD0aSW.js";const c={},d=e("h1",{id:"html-–-code-guidelines",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#html-–-code-guidelines"},[e("span",null,"HTML – Code Guidelines")])],-1),h=e("h2",{id:"we-write-semantic-markup",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#we-write-semantic-markup"},[e("span",null,"We write semantic markup")])],-1),m=e("code",null,"divs",-1),u=e("code",null,"spans",-1),p={href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element",target:"_blank",rel:"noopener noreferrer"},f=e("p",null,"Why?",-1),_=e("ul",null,[e("li",null,"semantic markup is crucial for accessibility"),e("li",null,"it makes the code more readable for other developers"),e("li",null,"it benefits our SEO")],-1),w={href:"https://css-tricks.com/why-how-and-when-to-use-semantic-html-and-aria/",target:"_blank",rel:"noopener noreferrer"},b=i('<p>This doesn’t mean you can’t ever use a <code>div</code> – just think twice before you do!</p><h2 id="we-write-as-little-html-as-possible-–-and-as-much-as-necessary" tabindex="-1"><a class="header-anchor" href="#we-write-as-little-html-as-possible-–-and-as-much-as-necessary"><span>We write as little HTML as possible – and as much as necessary</span></a></h2><p>HTML is used to <em>structure content on the page</em> and should therefore reflect its complexity. Not more and not less. Most content does not require deep nesting of HTML elements – if you find yourself wrapping <code>container</code> around <code>container</code> or adding an element just to correctly position another element on the page this calls for the use of CSS instead!</p><p>Why?</p><ul><li>deep nesting makes it hard to understand, style and maintain components</li><li>it can lead to performance issues</li></ul><h2 id="recommended-reads" tabindex="-1"><a class="header-anchor" href="#recommended-reads"><span>Recommended reads</span></a></h2><p>For a deeper dive into the WHY and HOW have a look at the following resources:</p>',7),g={href:"https://developer.mozilla.org/en-US/docs/Learn/Accessibility/HTML",target:"_blank",rel:"noopener noreferrer"},k={href:"https://css-tricks.com/why-how-and-when-to-use-semantic-html-and-aria/",target:"_blank",rel:"noopener noreferrer"};function y(v,T){const s=o("ExternalLinkIcon");return r(),l("div",null,[d,h,e("p",null,[t("We avoid using "),m,t(" and "),u,t(" and try to choose more meaningful HTML elements instead. If unsure which element to use "),e("a",p,[t("this list by MDN"),n(s)]),t(" can be of help.")]),f,_,e("p",null,[t("For more background "),e("a",w,[t("see this article"),n(s)]),t(".")]),b,e("ul",null,[e("li",null,[e("a",g,[t("HTML: a good basis for accessibility"),n(s)])]),e("li",null,[e("a",k,[t("Why, how, and when to use semantic HTML and ARIA"),n(s)])])])])}const M=a(c,[["render",y],["__file","html.html.vue"]]),W=JSON.parse('{"path":"/webapp/html.html","title":"HTML – Code Guidelines","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"We write semantic markup","slug":"we-write-semantic-markup","link":"#we-write-semantic-markup","children":[]},{"level":2,"title":"We write as little HTML as possible – and as much as necessary","slug":"we-write-as-little-html-as-possible-–-and-as-much-as-necessary","link":"#we-write-as-little-html-as-possible-–-and-as-much-as-necessary","children":[]},{"level":2,"title":"Recommended reads","slug":"recommended-reads","link":"#recommended-reads","children":[]}],"git":{"createdTime":1729782505000,"updatedTime":1729782505000,"contributors":[{"name":"Wolfgang Huß","email":"wolle.huss@pjannto.com","commits":1}]},"readingTime":{"minutes":0.78,"words":233},"filePathRelative":"webapp/html.md","localizedDate":"October 24, 2024","excerpt":"\\n<h2>We write semantic markup</h2>\\n<p>We avoid using <code>divs</code> and <code>spans</code> and try to choose more meaningful HTML elements instead. If unsure which element to use <a href=\\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">this list by MDN</a> can be of help.</p>"}');export{M as comp,W as data};
