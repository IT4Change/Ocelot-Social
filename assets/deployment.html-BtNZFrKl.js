import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as d,c,a as e,b as n,d as a,w as r,e as t}from"./app-DAOD0aSW.js";const p={},m=e("h1",{id:"deployment",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#deployment"},[e("span",null,"Deployment")])],-1),h=e("p",null,"Before you start the deployment you have to do preparations.",-1),u=e("h2",{id:"deployment-preparations",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#deployment-preparations"},[e("span",null,"Deployment Preparations")])],-1),b={href:"https://docker.com",target:"_blank",rel:"noopener noreferrer"},v={href:"https://hub.docker.com",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/Ocelot-Social-Community/Ocelot-Social/blob/master/package.json",target:"_blank",rel:"noopener noreferrer"},k=e("code",null,"dockerOrganisation",-1),g=e("br",null,null,-1),y={href:"https://github.com/Ocelot-Social-Community/Ocelot-Social/blob/master/README.md",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/Ocelot-Social-Community/Ocelot-Social/blob/master/README.md#usage",target:"_blank",rel:"noopener noreferrer"},w=e("h2",{id:"deployment-methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#deployment-methods"},[e("span",null,"Deployment Methods")])],-1),S=e("p",null,"You have the following options for a deployment:",-1),O=t(`<h2 id="after-deployment" tabindex="-1"><a class="header-anchor" href="#after-deployment"><span>After Deployment</span></a></h2><p>After the first deployment of the new network on your server, the database is initialized with the default administrator:</p><ul><li>E-mail: <code>admin@example.org</code></li><li>Password: <code>1234</code></li></ul><p><em><strong>ATTENTION:</strong></em> When you are logged in for the first time, please change your (the admin&#39;s) e-mail to an existing one and change your password to a secure one !!!</p><h2 id="using-the-scripts" tabindex="-1"><a class="header-anchor" href="#using-the-scripts"><span>Using the Scripts</span></a></h2><p>To use most of the scripts you have to set the variable <code>CONFIGURATION</code> in your terminal by entering:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># in deployment folder</span>

<span class="token comment"># set configuration name to folder name in &#39;configurations&#39; folder (network name)</span>
$ <span class="token builtin class-name">export</span> <span class="token assign-left variable">CONFIGURATION</span><span class="token operator">=</span><span class="token operator">&lt;</span>your-configuration-name<span class="token operator">&gt;</span>
<span class="token comment"># to check this</span>
$ <span class="token builtin class-name">echo</span> <span class="token variable">$CONFIGURATION</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="secrets-encrypt-decrypt" tabindex="-1"><a class="header-anchor" href="#secrets-encrypt-decrypt"><span>Secrets Encrypt/Decrypt</span></a></h3><p>To encrypt and decrypt the secrets of your network in your terminal set a correct password in a (new) file <code>configurations/&lt;your-configuration-name&gt;/SECRET</code>. If done please enter:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># in deployment folder</span>

<span class="token comment"># encrypt secrets</span>
$ scripts/secrets.encrypt.sh

<span class="token comment"># decrypt secrets</span>
$ scripts/secrets.decrypt.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="maintenance-mode-on-off" tabindex="-1"><a class="header-anchor" href="#maintenance-mode-on-off"><span>Maintenance Mode On/Off</span></a></h3><p>Activate or deactivate maintenance mode in your terminal:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># in deployment folder</span>

<span class="token comment"># activate maintenance mode</span>
$ scripts/cluster.maintenance.sh on

<span class="token comment"># deactivate maintenance mode</span>
$ scripts/cluster.maintenance.sh off
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="backup-scripts" tabindex="-1"><a class="header-anchor" href="#backup-scripts"><span>Backup Scripts</span></a></h3><p>Save backups.</p><h4 id="single-backup" tabindex="-1"><a class="header-anchor" href="#single-backup"><span>Single Backup</span></a></h4><p>To save a local backup of the database and uploaded images:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># in deployment folder</span>

<span class="token comment"># save backup</span>
$ scripts/cluster.backup.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The backup will be saved into your network folders <code>backup</code> folder in a new folder with the date and time.</p><h5 id="default-database-name" tabindex="-1"><a class="header-anchor" href="#default-database-name"><span>Default Database Name</span></a></h5><p>To execute this script, it may be necessary to set the default database name in Neo4j.</p><p>In our deployments there are cases where the database is called <code>neo4j</code> (used by default) and in other cases <code>graph.db</code> (accidentally happened when we loaded the database into a new cluster).</p>`,22),x=e("code",null,"NEO4J_dbms_default__database",-1),D=e("code",null,"values.yaml",-1),A={href:"https://neo4j.com/docs/operations-manual/4.4/docker/ref-settings/",target:"_blank",rel:"noopener noreferrer"},E=t(`<h4 id="multiple-networks-backup" tabindex="-1"><a class="header-anchor" href="#multiple-networks-backup"><span>Multiple Networks Backup</span></a></h4><p>In order to save several network backups locally, you must define the configuration names of all networks in <code>.env</code>. The template for this is <code>deployment/.env.dist</code>:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># in the deployment folders &#39;.env&#39; set as example</span>
<span class="token assign-left variable">BACKUP_CONFIGURATIONS</span><span class="token operator">=</span><span class="token string">&quot;stage.ocelot.social stage.wir.social&quot;</span>
<span class="token assign-left variable">BACKUP_SAVED_BACKUPS_NUMBER</span><span class="token operator">=</span><span class="token number">7</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>If <code>BACKUP_SAVED_BACKUPS_NUMBER &lt;= 0</code> then no backups will be deleted.</p><p>To actually save all the backups run:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># in deployment folder</span>

<span class="token comment"># save all backups listed in &#39;BACKUP_CONFIGURATIONS&#39;</span>
<span class="token comment"># delete all backups older then the &#39;BACKUP_SAVED_BACKUPS_NUMBER&#39; newest ones</span>
$ scripts/clusters.backup-multiple-servers.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The backups will be saved into your networks folders <code>backup</code> folder in a new folder with the date and time.</p><h4 id="automated-backups" tabindex="-1"><a class="header-anchor" href="#automated-backups"><span>Automated Backups</span></a></h4><p>⚠️ <em>Attention: Please check carefully whether really the oldest backups have been deleted. As shells on different systems behave differently with regard to the commands used in this script.</em></p>`,9),C={href:"https://en.wikipedia.org/wiki/Cron",target:"_blank",rel:"noopener noreferrer"},N=t(`<p>Installing a cron job by editing the cron table file:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># edit cron job table</span>
$ <span class="token function">crontab</span> <span class="token parameter variable">-e</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>In the editor add the line:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># in cron job table file</span>

<span class="token comment"># set a cron job every night at 04am server time</span>
<span class="token comment"># min   hour    day     month   weekday command</span>
00      04      *       *       *       /root/Ocelot-Social/deployment/scripts/clusters.backup-multiple-servers.sh <span class="token operator">&gt;&gt;</span> /root/Ocelot-Social/deployment/backup-cron-job.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This way the terminal output is written into a log file named <code>backup-cron-job.log</code> located in the deployment folder.</p><p>Be aware that the server datetime can differ from your local time. Especially by the change between summer and winter time, because servers usually have UTC. Find out the actual difference by running the command <code>date</code> on your server.</p>`,6);function T(B,U){const s=l("ExternalLinkIcon"),o=l("RouteLink");return d(),c("div",null,[m,h,u,e("p",null,[n("Since all deployment methods described here depend on "),e("a",b,[n("Docker"),a(s)]),n(" and "),e("a",v,[n("DockerHub"),a(s)]),n(", you need to create your own organisation on DockerHub and put its name in the "),e("a",f,[n("package.json"),a(s)]),n(" file as your "),k,n("."),g,n(" Read more details in the "),e("a",y,[n("main README"),a(s)]),n(" under "),e("a",_,[n("Usage"),a(s)]),n(".")]),w,S,e("ul",null,[e("li",null,[a(o,{to:"/deployment/src/kubernetes/"},{default:r(()=>[n("Kubernetes with Helm")]),_:1})])]),O,e("p",null,[n("In the new deployment with Helm, we set the default database name by the environment variable "),x,n(" in the Helm "),D,n(". See "),e("a",A,[n("Docker-specific configuration settings"),a(s)])]),e("p",null,[n("For more information see "),a(o,{to:"/neo4j/#database-management-commands"},{default:r(()=>[n("Database Management Commands")]),_:1}),n(".")]),E,e("p",null,[n("Install automated backups by a "),e("a",C,[n("cron job"),a(s)]),n(". Be aware of having the bash shell installed to run the script. The environment variables for the automated backups are described above.")]),N])}const M=i(p,[["render",T],["__file","deployment.html.vue"]]),j=JSON.parse('{"path":"/deployment/deployment.html","title":"Deployment","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Deployment Preparations","slug":"deployment-preparations","link":"#deployment-preparations","children":[]},{"level":2,"title":"Deployment Methods","slug":"deployment-methods","link":"#deployment-methods","children":[]},{"level":2,"title":"After Deployment","slug":"after-deployment","link":"#after-deployment","children":[]},{"level":2,"title":"Using the Scripts","slug":"using-the-scripts","link":"#using-the-scripts","children":[{"level":3,"title":"Secrets Encrypt/Decrypt","slug":"secrets-encrypt-decrypt","link":"#secrets-encrypt-decrypt","children":[]},{"level":3,"title":"Maintenance Mode On/Off","slug":"maintenance-mode-on-off","link":"#maintenance-mode-on-off","children":[]},{"level":3,"title":"Backup Scripts","slug":"backup-scripts","link":"#backup-scripts","children":[]}]}],"git":{"createdTime":1729782505000,"updatedTime":1729782505000,"contributors":[{"name":"Wolfgang Huß","email":"wolle.huss@pjannto.com","commits":1}]},"readingTime":{"minutes":2.24,"words":673},"filePathRelative":"deployment/deployment.md","localizedDate":"October 24, 2024","excerpt":"\\n<p>Before you start the deployment you have to do preparations.</p>\\n<h2>Deployment Preparations</h2>\\n<p>Since all deployment methods described here depend on <a href=\\"https://docker.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Docker</a> and <a href=\\"https://hub.docker.com\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">DockerHub</a>, you need to create your own organisation on DockerHub and put its name in the <a href=\\"https://github.com/Ocelot-Social-Community/Ocelot-Social/blob/master/package.json\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">package.json</a> file as your <code>dockerOrganisation</code>.<br>\\nRead more details in the <a href=\\"https://github.com/Ocelot-Social-Community/Ocelot-Social/blob/master/README.md\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">main README</a> under <a href=\\"https://github.com/Ocelot-Social-Community/Ocelot-Social/blob/master/README.md#usage\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Usage</a>.</p>"}');export{M as comp,j as data};
