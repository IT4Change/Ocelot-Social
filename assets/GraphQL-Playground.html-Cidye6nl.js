import{_ as i}from"./graphql-playground (1)-C_SWrH2M.js";import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as p,c as u,a as n,b as e,d as t,w as s,e as o}from"./app-DAOD0aSW.js";const d={},c=o('<h1 id="graphql-playground" tabindex="-1"><a class="header-anchor" href="#graphql-playground"><span>GraphQL Playground</span></a></h1><p><img src="'+i+'" alt="GraphQL Playground" loading="lazy"></p><p><em><strong>Attention:</strong> For using the GraphQL Playground set <code>DEBUG=true</code> in your backend <code>.env</code>, see <code>.env.template</code>!</em></p><p>To use GraphQL Playground, we need to know some basics:</p><h2 id="how-to-login" tabindex="-1"><a class="header-anchor" href="#how-to-login"><span>How To Login?</span></a></h2><p>First, we need to have a user from ocelot.social to log in as. The user can be created by seeding the Neo4j database from the backend or by multiple GraphQL mutations.</p><h3 id="seed-the-neo4j-database" tabindex="-1"><a class="header-anchor" href="#seed-the-neo4j-database"><span>Seed The Neo4j Database</span></a></h3>',7),g=n("code",null,"http://localhost:4000/",-1),h=o(`<h3 id="use-graphql-mutations-to-create-a-user" tabindex="-1"><a class="header-anchor" href="#use-graphql-mutations-to-create-a-user"><span>Use GraphQL Mutations To Create A User</span></a></h3><p>TODO: Describe how to create a user using GraphQL mutations!</p><h3 id="login-via-graphql" tabindex="-1"><a class="header-anchor" href="#login-via-graphql"><span>Login Via GraphQL</span></a></h3><p>You can register a user by sending the query:</p><div class="language-gql line-numbers-mode" data-ext="gql" data-title="gql"><pre class="language-gql"><code>mutation {
  login(email: &quot;user@example.org&quot;, password: &quot;1234&quot;)
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Or use <code>&quot;moderator@example.org&quot;</code> or <code>&quot;admin@example.org&quot;</code> for the roll you need.</p><p>If all goes well, you will receive a QGL response like:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;login&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InUzIiwibmFtZSI6Ikplbm55IFJvc3RvY2siLCJzbHVnIjoiamVubnktcm9zdG9jayIsImlhdCI6MTY2MjAyMzMwNSwiZXhwIjoxNzI1MTM4NTA1LCJhdWQiOiJodHRwOi8vbG9jYWxob3N0OjMwMDAiLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjQwMDAiLCJzdWIiOiJ1MyJ9.atBS-SOeS784HPeFl_5s8sRWehEAU1BkgcOZFD8d4bU&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can use this response to set an HTTP header when you click <code>HTTP HEADERS</code> in the footer. Just set it with the login token you received in response:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;Authorization&quot;</span><span class="token operator">:</span> <span class="token string">&quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6InUzIiwibmFtZSI6Ikplbm55IFJvc3RvY2siLCJzbHVnIjoiamVubnktcm9zdG9jayIsImlhdCI6MTY2MjAyMzMwNSwiZXhwIjoxNzI1MTM4NTA1LCJhdWQiOiJodHRwOi8vbG9jYWxob3N0OjMwMDAiLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjQwMDAiLCJzdWIiOiJ1MyJ9.atBS-SOeS784HPeFl_5s8sRWehEAU1BkgcOZFD8d4bU&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This token is used for all other queries and mutations you send to the backend.</p><h2 id="query-and-mutate" tabindex="-1"><a class="header-anchor" href="#query-and-mutate"><span>Query And Mutate</span></a></h2><p>When you are logged in and open a new playground tab by clicking &quot;+&quot;, you can create a new group by sending the following mutation:</p><div class="language-gql line-numbers-mode" data-ext="gql" data-title="gql"><pre class="language-gql"><code>mutation {
  CreateGroup(
    # id: &quot;&quot;
    name: &quot;My Group&quot;
    # slug: &quot;&quot;
    about: &quot;We will save the world&quot;
    description: &quot;&lt;p class=\\&quot;\\&quot;&gt;&lt;em&gt;English:&lt;/em&gt;&lt;/p&gt;&lt;p class=\\&quot;\\&quot;&gt;This group is hidden.&lt;/p&gt;&lt;h3&gt;What is our group for?&lt;/h3&gt;&lt;p&gt;This group was created to allow investigative journalists to share and collaborate.&lt;/p&gt;&lt;h3&gt;How does it work?&lt;/h3&gt;&lt;p&gt;Here you can internally share posts and comments about them.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Deutsch:&lt;/em&gt;&lt;/p&gt;&lt;p class=\\&quot;\\&quot;&gt;Diese Gruppe ist verborgen.&lt;/p&gt;&lt;h3&gt;Wofür ist unsere Gruppe?&lt;/h3&gt;&lt;p class=\\&quot;\\&quot;&gt;Diese Gruppe wurde geschaffen, um investigativen Journalisten den Austausch und die Zusammenarbeit zu ermöglichen.&lt;/p&gt;&lt;h3&gt;Wie funktioniert das?&lt;/h3&gt;&lt;p class=\\&quot;\\&quot;&gt;Hier könnt ihr euch intern über Beiträge und Kommentare zu ihnen austauschen.&lt;/p&gt;&quot;
    groupType: hidden
    actionRadius: interplanetary
    categoryIds: [&quot;cat12&quot;]
  ) {
    id
    name
    slug
    createdAt
    updatedAt
    disabled
    deleted
    about
    description
    groupType
    actionRadius
    myRole
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You will receive the answer:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;CreateGroup&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2e3bbadb-804b-4ebc-a673-2d7c7f05e827&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;My Group&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;slug&quot;</span><span class="token operator">:</span> <span class="token string">&quot;my-group&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;createdAt&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2022-09-01T09:44:47.969Z&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;updatedAt&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2022-09-01T09:44:47.969Z&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;disabled&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token property">&quot;deleted&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token property">&quot;about&quot;</span><span class="token operator">:</span> <span class="token string">&quot;We will save the world&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&lt;p class=\\&quot;\\&quot;&gt;&lt;em&gt;English:&lt;/em&gt;&lt;/p&gt;&lt;p class=\\&quot;\\&quot;&gt;This group is hidden.&lt;/p&gt;&lt;h3&gt;What is our group for?&lt;/h3&gt;&lt;p&gt;This group was created to allow investigative journalists to share and collaborate.&lt;/p&gt;&lt;h3&gt;How does it work?&lt;/h3&gt;&lt;p&gt;Here you can internally share posts and comments about them.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;em&gt;Deutsch:&lt;/em&gt;&lt;/p&gt;&lt;p class=\\&quot;\\&quot;&gt;Diese Gruppe ist verborgen.&lt;/p&gt;&lt;h3&gt;Wofür ist unsere Gruppe?&lt;/h3&gt;&lt;p class=\\&quot;\\&quot;&gt;Diese Gruppe wurde geschaffen, um investigativen Journalisten den Austausch und die Zusammenarbeit zu ermöglichen.&lt;/p&gt;&lt;h3&gt;Wie funktioniert das?&lt;/h3&gt;&lt;p class=\\&quot;\\&quot;&gt;Hier könnt ihr euch intern über Beiträge und Kommentare zu ihnen austauschen.&lt;/p&gt;&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;groupType&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hidden&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;actionRadius&quot;</span><span class="token operator">:</span> <span class="token string">&quot;interplanetary&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;myRole&quot;</span><span class="token operator">:</span> <span class="token string">&quot;owner&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16);function m(v,b){const a=r("RouteLink");return p(),u("div",null,[c,n("p",null,[e("In your browser you can reach the GraphQL Playground under "),g,e(", if the database and the backend are running, see "),t(a,{to:"/backend/"},{default:s(()=>[e("backend")]),_:1}),e(". There you will also find instructions on how to seed the database.")]),h,n("p",null,[e("If you look into the Neo4j database with your browser and search the groups, you will now also find your new group. For more details about our Neo4j database read "),t(a,{to:"/neo4j/"},{default:s(()=>[e("here")]),_:1}),e(".")])])}const w=l(d,[["render",m],["__file","GraphQL-Playground.html.vue"]]),f=JSON.parse('{"path":"/backend/src/graphql/GraphQL-Playground.html","title":"GraphQL Playground","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"How To Login?","slug":"how-to-login","link":"#how-to-login","children":[{"level":3,"title":"Seed The Neo4j Database","slug":"seed-the-neo4j-database","link":"#seed-the-neo4j-database","children":[]},{"level":3,"title":"Use GraphQL Mutations To Create A User","slug":"use-graphql-mutations-to-create-a-user","link":"#use-graphql-mutations-to-create-a-user","children":[]},{"level":3,"title":"Login Via GraphQL","slug":"login-via-graphql","link":"#login-via-graphql","children":[]}]},{"level":2,"title":"Query And Mutate","slug":"query-and-mutate","link":"#query-and-mutate","children":[]}],"git":{"createdTime":1729782505000,"updatedTime":1729782505000,"contributors":[{"name":"Wolfgang Huß","email":"wolle.huss@pjannto.com","commits":1}]},"readingTime":{"minutes":1.94,"words":581},"filePathRelative":"backend/src/graphql/GraphQL-Playground.md","localizedDate":"October 24, 2024","excerpt":"\\n<p></p>\\n<p><em><strong>Attention:</strong> For using the GraphQL Playground set <code>DEBUG=true</code> in your backend <code>.env</code>, see <code>.env.template</code>!</em></p>\\n<p>To use GraphQL Playground, we need to know some basics:</p>\\n<h2>How To Login?</h2>\\n<p>First, we need to have a user from ocelot.social to log in as.\\nThe user can be created by seeding the Neo4j database from the backend or by multiple GraphQL mutations.</p>"}');export{w as comp,f as data};
