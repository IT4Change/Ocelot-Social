import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as i,c,a as e,b as n,d as s,e as t}from"./app-DAOD0aSW.js";const p={},d=e("h1",{id:"kubernetes-backup-of-ocelot-social",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#kubernetes-backup-of-ocelot-social"},[e("span",null,"Kubernetes Backup Of Ocelot.Social")])],-1),r={href:"https://github.com/Ocelot-Social-Community/Ocelot-Social",target:"_blank",rel:"noopener noreferrer"},u=e("h2",{id:"manual-offline-backup",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#manual-offline-backup"},[e("span",null,"Manual Offline Backup")])],-1),m={href:"https://kubernetes.io/docs/tasks/tools/",target:"_blank",rel:"noopener noreferrer"},k=t(`<p>Check if the correct context is used by running the following commands:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># check context and set the correct one</span>
$ kubectl config get-contexts
<span class="token comment"># if the wrong context is chosen use it</span>
$ kubectl config use-context <span class="token operator">&lt;</span>your-context<span class="token operator">&gt;</span>
<span class="token comment"># if you like check additionally if all pods are running well</span>
$ kubectl <span class="token parameter variable">-n</span> default get pods <span class="token parameter variable">-o</span> wide
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The very first step is to put the website into <strong>maintenance mode</strong>.</p><h3 id="set-maintenance-mode" tabindex="-1"><a class="header-anchor" href="#set-maintenance-mode"><span>Set Maintenance Mode</span></a></h3><p>There are two ways to put the network into maintenance mode:</p><ul><li>via Kubernetes Dashboard</li><li>via <code>kubectl</code></li></ul><h4 id="maintenance-mode-via-kubernetes-dashboard" tabindex="-1"><a class="header-anchor" href="#maintenance-mode-via-kubernetes-dashboard"><span>Maintenance Mode Via Kubernetes Dashboard</span></a></h4><p>In the Kubernetes Dashboard, you can select <code>Ingresses</code> from the left side menu under <code>Service</code>.</p><p>After that, in the list that appears, you will find the entry <code>ingress-ocelot-webapp</code>, which has three dots on the right, where you can click to edit the entry.</p><p>You can scroll to the end of the YAML file, where you will find one or more <code>host</code> entries under <code>rules</code>, one for each domain of the network.</p><p>In all entries, change the value of the <code>serviceName</code> entry from <em><strong>ocelot-webapp</strong></em> to <code>ocelot-maintenance</code> and the value of the <code>servicePort</code> entry from <em><strong>3000</strong></em> to <code>80</code>.</p><p>First, check if your website is still online. After you click <code>Update</code>, the new settings will be applied and you will find your website in maintenance mode.</p><h4 id="maintenance-mode-via-kubectl" tabindex="-1"><a class="header-anchor" href="#maintenance-mode-via-kubectl"><span>Maintenance Mode Via <code>kubectl</code></span></a></h4><p>To put the network into maintenance mode, run the following commands in the terminal:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># list ingresses</span>
$ kubectl get ingress <span class="token parameter variable">-n</span> default
<span class="token comment"># edit ingress</span>
$ kubectl <span class="token parameter variable">-n</span> default edit ingress ingress-ocelot-webapp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Change the content of the YAML file for all domains to:</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>  <span class="token key atrule">spec</span><span class="token punctuation">:</span>
    <span class="token key atrule">rules</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> network<span class="token punctuation">-</span>domain.social
      <span class="token key atrule">http</span><span class="token punctuation">:</span>
        <span class="token key atrule">paths</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">backend</span><span class="token punctuation">:</span>
          <span class="token comment"># serviceName: ocelot-webapp</span>
          <span class="token comment"># servicePort: 3000</span>
          <span class="token key atrule">serviceName</span><span class="token punctuation">:</span> ocelot<span class="token punctuation">-</span>maintenance
          <span class="token key atrule">servicePort</span><span class="token punctuation">:</span> <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>First, check if your website is still online. After you save the file, the new settings will be applied and you will find your website in maintenance mode.</p><h3 id="neo4j-database-offline-backup" tabindex="-1"><a class="header-anchor" href="#neo4j-database-offline-backup"><span>Neo4j Database Offline Backup</span></a></h3><p>Before we can back up the database, we need to put it into <strong>sleep mode</strong>.</p><h4 id="set-neo4j-to-sleep-mode" tabindex="-1"><a class="header-anchor" href="#set-neo4j-to-sleep-mode"><span>Set Neo4j To Sleep Mode</span></a></h4><p>Again there are two ways to put the network into sleep mode:</p><ul><li>via Kubernetes Dashboard</li><li>via <code>kubectl</code></li></ul><h5 id="sleep-mode-via-kubernetes-dashboard" tabindex="-1"><a class="header-anchor" href="#sleep-mode-via-kubernetes-dashboard"><span>Sleep Mode Via Kubernetes Dashboard</span></a></h5><p>In the Kubernetes Dashboard, you can select <code>Deployments</code> from the left side menu under <code>Workloads</code>.</p><p>After that, in the list that appears, you will find the entry <code>ocelot-neo4j</code>, which has three dots on the right, where you can click to edit the entry.</p><p>Scroll to the end of the YAML file where you will find the <code>spec.template.spec.containers</code> entry. Here you can insert the <code>command</code> entry directly after <code>imagePullPolicy</code> in a new line.</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>          <span class="token key atrule">terminationMessagePath</span><span class="token punctuation">:</span> /dev/termination<span class="token punctuation">-</span>log
          <span class="token key atrule">terminationMessagePolicy</span><span class="token punctuation">:</span> File
          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> Always
          <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;tail&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-f&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/dev/null&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After clicking <code>Update</code>, the new settings will be applied and you should check in the <code>Pods</code> menu item on the left side if the <code>ocelot-neo4j-&lt;ID&gt;</code> pod restarts.</p><h5 id="sleep-mode-via-kubectl" tabindex="-1"><a class="header-anchor" href="#sleep-mode-via-kubectl"><span>Sleep Mode Via <code>kubectl</code></span></a></h5><p>To put Neo4j into sleep mode, run the following commands in the terminal:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># list deployments</span>
$ kubectl get deployments <span class="token parameter variable">-n</span> default
<span class="token comment"># edit deployment</span>
$ kubectl <span class="token parameter variable">-n</span> default edit deployment ocelot-neo4j
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Scroll to the <code>spec.template.spec.containers</code> entry. Here you can insert the <code>command</code> entry directly after <code>imagePullPolicy</code> in a new line.</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>          <span class="token key atrule">image</span><span class="token punctuation">:</span> &lt;network<span class="token punctuation">-</span>DockerHub<span class="token punctuation">-</span>name<span class="token punctuation">&gt;</span>/neo4j<span class="token punctuation">-</span>community<span class="token punctuation">-</span>branded<span class="token punctuation">:</span>latest
          <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> Always
          <span class="token key atrule">command</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">&quot;tail&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;-f&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;/dev/null&quot;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After pressing enter, the new settings will be applied and you should check if the <code>ocelot-neo4j-&lt;ID&gt;</code> pod restarts. Use command:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># check if the old pod restarts</span>
$ kubectl <span class="token parameter variable">-n</span> default get pods <span class="token parameter variable">-o</span> wide
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="generate-offline-backup" tabindex="-1"><a class="header-anchor" href="#generate-offline-backup"><span>Generate Offline Backup</span></a></h4><p>The offline backup is generated via <code>kubectl</code>:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># check for the Neo4j pod</span>
$ kubectl <span class="token parameter variable">-n</span> default get pods <span class="token parameter variable">-o</span> wide

<span class="token comment"># ls: see wish backup dumps are already there</span>
$ kubectl <span class="token parameter variable">-n</span> default <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> <span class="token variable"><span class="token variable">$(</span>kubectl <span class="token parameter variable">-n</span> default get pods <span class="token operator">|</span> <span class="token function">grep</span> ocelot-neo4j <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{ print $1 }&#39;</span><span class="token variable">)</span></span> -- <span class="token function">ls</span>

<span class="token comment"># bash: enter bash of Neo4j</span>
$ kubectl <span class="token parameter variable">-n</span> default <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> <span class="token variable"><span class="token variable">$(</span>kubectl <span class="token parameter variable">-n</span> default get pods <span class="token operator">|</span> <span class="token function">grep</span> ocelot-neo4j <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{ print $1 }&#39;</span><span class="token variable">)</span></span> -- <span class="token function">bash</span>
<span class="token comment"># generate Dump</span>
neo4j% neo4j-admin dump <span class="token parameter variable">--to</span><span class="token operator">=</span>/var/lib/neo4j/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F<span class="token variable">)</span></span>-neo4j-dump
<span class="token comment"># exit bash</span>
neo4j% <span class="token builtin class-name">exit</span>

<span class="token comment"># ls: see if the new backup dump is there</span>
$ kubectl <span class="token parameter variable">-n</span> default <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> <span class="token variable"><span class="token variable">$(</span>kubectl <span class="token parameter variable">-n</span> default get pods <span class="token operator">|</span> <span class="token function">grep</span> ocelot-neo4j <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{ print $1 }&#39;</span><span class="token variable">)</span></span> -- <span class="token function">ls</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,39),b=e("code",null,"--database=<name>",-1),v=e("code",null,"neo4j-admin dump",-1),h={href:"https://github.com/Ocelot-Social-Community/Ocelot-Social/blob/master/neo4j/README.md",target:"_blank",rel:"noopener noreferrer"},g=t(`<p>Lets copy the dump backup</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># copy dump onto backup volume direct</span>
$ kubectl <span class="token function">cp</span> default/<span class="token variable"><span class="token variable">$(</span>kubectl <span class="token parameter variable">-n</span> default get pods <span class="token operator">|</span> <span class="token function">grep</span> ocelot-neo4j <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{ print $1 }&#39;</span><span class="token variable">)</span></span>:/var/lib/neo4j/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F<span class="token variable">)</span></span>-neo4j-dump /Volumes/<span class="token operator">&lt;</span>volume-name<span class="token operator">&gt;</span>/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F<span class="token variable">)</span></span>-neo4j-dump

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="remove-sleep-mode-from-neo4j" tabindex="-1"><a class="header-anchor" href="#remove-sleep-mode-from-neo4j"><span>Remove Sleep Mode From Neo4j</span></a></h4><p>Again there are two ways to put the network into working mode:</p><ul><li>via Kubernetes Dashboard</li><li>via <code>kubectl</code></li></ul><h5 id="remove-sleep-mode-via-kubernetes-dashboard" tabindex="-1"><a class="header-anchor" href="#remove-sleep-mode-via-kubernetes-dashboard"><span>Remove Sleep Mode Via Kubernetes Dashboard</span></a></h5><p>In the Kubernetes Dashboard, you can select <code>Deployments</code> from the left side menu under <code>Workloads</code>.</p><p>After that, in the list that appears, you will find the entry <code>ocelot-neo4j</code>, which has three dots on the right, where you can click to edit the entry.</p><p>Scroll to the <code>spec.template.spec.containers.command</code> entry and remove the whole <code>command</code> entry like:</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> container<span class="token punctuation">-</span>ocelot<span class="token punctuation">-</span>neo4j
          <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">&#39;senderfm/neo4j-community-branded:latest&#39;</span>
          <span class="token key atrule">command</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> tail
            <span class="token punctuation">-</span> <span class="token string">&#39;-f&#39;</span>
            <span class="token punctuation">-</span> /dev/null
          <span class="token key atrule">ports</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">7687</span>
              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>And get:</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>      <span class="token key atrule">containers</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> container<span class="token punctuation">-</span>ocelot<span class="token punctuation">-</span>neo4j
          <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">&#39;senderfm/neo4j-community-branded:latest&#39;</span>
          <span class="token key atrule">ports</span><span class="token punctuation">:</span>
            <span class="token punctuation">-</span> <span class="token key atrule">containerPort</span><span class="token punctuation">:</span> <span class="token number">7687</span>
              <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After clicking <code>Update</code>, the new settings will be applied and you should check in the <code>Pods</code> menu item on the left side if the <code>ocelot-neo4j-&lt;ID&gt;</code> pod restarts.</p><h5 id="remove-sleep-mode-via-kubectl" tabindex="-1"><a class="header-anchor" href="#remove-sleep-mode-via-kubectl"><span>Remove Sleep Mode Via <code>kubectl</code></span></a></h5><p>To put Neo4j into working mode, run the following commands in the terminal:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># list deployments</span>
$ kubectl get deployments <span class="token parameter variable">-n</span> default
<span class="token comment"># edit deployment</span>
$ kubectl <span class="token parameter variable">-n</span> default edit deployment ocelot-neo4j
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Scroll to the <code>spec.template.spec.containers.command</code> entry and remove the whole <code>command</code> entry like:</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>    <span class="token key atrule">spec</span><span class="token punctuation">:</span>
      <span class="token key atrule">containers</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">command</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> tail
        <span class="token punctuation">-</span> <span class="token punctuation">-</span>f
        <span class="token punctuation">-</span> /dev/null
        <span class="token key atrule">envFrom</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">configMapRef</span><span class="token punctuation">:</span>
            <span class="token key atrule">name</span><span class="token punctuation">:</span> configmap<span class="token punctuation">-</span>ocelot<span class="token punctuation">-</span>neo4j
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>And get:</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>    <span class="token key atrule">spec</span><span class="token punctuation">:</span>
      <span class="token key atrule">containers</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">envFrom</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">configMapRef</span><span class="token punctuation">:</span>
            <span class="token key atrule">name</span><span class="token punctuation">:</span> configmap<span class="token punctuation">-</span>ocelot<span class="token punctuation">-</span>neo4j
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After pressing enter, the new settings will be applied and you should check if the <code>ocelot-neo4j-&lt;ID&gt;</code> pod restarts. Use command:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># check if the old pod restarts</span>
$ kubectl <span class="token parameter variable">-n</span> default get pods <span class="token parameter variable">-o</span> wide
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="backend-backup" tabindex="-1"><a class="header-anchor" href="#backend-backup"><span>Backend Backup</span></a></h3><p>To back up the images from the backend volume, run commands:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># ls: backend/public/uploads</span>
$ kubectl <span class="token parameter variable">-n</span> default <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> <span class="token variable"><span class="token variable">$(</span>kubectl <span class="token parameter variable">-n</span> default get pods <span class="token operator">|</span> <span class="token function">grep</span> ocelot-backend <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{ print $1 }&#39;</span><span class="token variable">)</span></span> -- <span class="token function">ls</span> public/uploads

<span class="token comment"># copy all images from upload to backup volume direct</span>
$ kubectl <span class="token function">cp</span> default/<span class="token variable"><span class="token variable">$(</span>kubectl <span class="token parameter variable">-n</span> default get pods <span class="token operator">|</span> <span class="token function">grep</span> ocelot-backend <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{ print $1 }&#39;</span><span class="token variable">)</span></span>:/app/public/uploads /Volumes/<span class="token operator">&lt;</span>volume-name<span class="token operator">&gt;</span>/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F<span class="token variable">)</span></span>-public-uploads
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="remove-maintenance-mode" tabindex="-1"><a class="header-anchor" href="#remove-maintenance-mode"><span>Remove Maintenance Mode</span></a></h3><p>There are two ways to put the network into working mode:</p><ul><li>via Kubernetes Dashboard</li><li>via <code>kubectl</code></li></ul><h4 id="remove-maintenance-mode-via-kubernetes-dashboard" tabindex="-1"><a class="header-anchor" href="#remove-maintenance-mode-via-kubernetes-dashboard"><span>Remove Maintenance Mode Via Kubernetes Dashboard</span></a></h4><p>In the Kubernetes Dashboard, you can select <code>Ingresses</code> from the left side menu under <code>Service</code>.</p><p>After that, in the list that appears, you will find the entry <code>ingress-ocelot-webapp</code>, which has three dots on the right, where you can click to edit the entry.</p><p>You can scroll to the end of the YAML file, where you will find one or more <code>host</code> entries under <code>rules</code>, one for each domain of the network.</p><p>In all entries, change the value of the <code>serviceName</code> entry from <em><strong>ocelot-maintenance</strong></em> to <code>ocelot-webapp</code> and the value of the <code>servicePort</code> entry from <em><strong>80</strong></em> to <code>3000</code>.</p><p>First, check if your website is still in maintenance mode. After you click <code>Update</code>, the new settings will be applied and you will find your website online again.</p><h4 id="remove-maintenance-mode-via-kubectl" tabindex="-1"><a class="header-anchor" href="#remove-maintenance-mode-via-kubectl"><span>Remove Maintenance Mode Via <code>kubectl</code></span></a></h4><p>To put the network into working mode, run the following commands in the terminal:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># list ingresses</span>
$ kubectl get ingress <span class="token parameter variable">-n</span> default
<span class="token comment"># edit ingress</span>
$ kubectl <span class="token parameter variable">-n</span> default edit ingress ingress-ocelot-webapp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Change the content of the YAML file for all domains to:</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>  <span class="token key atrule">spec</span><span class="token punctuation">:</span>
    <span class="token key atrule">rules</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> network<span class="token punctuation">-</span>domain.social
      <span class="token key atrule">http</span><span class="token punctuation">:</span>
        <span class="token key atrule">paths</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">backend</span><span class="token punctuation">:</span>
          <span class="token key atrule">serviceName</span><span class="token punctuation">:</span> ocelot<span class="token punctuation">-</span>webapp
          <span class="token key atrule">servicePort</span><span class="token punctuation">:</span> <span class="token number">3000</span>
          <span class="token comment"># serviceName: ocelot-maintenance</span>
          <span class="token comment"># servicePort: 80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>First, check if your website is still in maintenance mode. After you save the file, the new settings will be applied and you will find your website online again.</p><p>XXX</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># Dump: Create a Backup in Kubernetes: https://docs.human-connection.org/human-connection/deployment/volumes/neo4j-offline-backup#create-a-backup-in-kubernetes</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,42);function f(y,w){const a=l("ExternalLinkIcon");return i(),c("div",null,[d,e("p",null,[n("One of the most important tasks in managing a running "),e("a",r,[n("ocelot.social"),s(a)]),n(" network is backing up the data, e.g. the Neo4j database and the stored image files.")]),u,e("p",null,[n("To prepare, "),e("a",m,[n("kubectl"),s(a)]),n(" must be installed and ready to use so that you have access to Kubernetes on your server.")]),k,e("p",null,[n("If you need a specific database name, add the option "),b,n(" to the command "),v,n(". To find out the default database name, see the "),e("a",h,[n("Neo4j readme"),s(a)]),n(".")]),g])}const _=o(p,[["render",f],["__file","Backup.html.vue"]]),$=JSON.parse('{"path":"/deployment/src/kubernetes/Backup.html","title":"Kubernetes Backup Of Ocelot.Social","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Manual Offline Backup","slug":"manual-offline-backup","link":"#manual-offline-backup","children":[{"level":3,"title":"Set Maintenance Mode","slug":"set-maintenance-mode","link":"#set-maintenance-mode","children":[]},{"level":3,"title":"Neo4j Database Offline Backup","slug":"neo4j-database-offline-backup","link":"#neo4j-database-offline-backup","children":[]},{"level":3,"title":"Backend Backup","slug":"backend-backup","link":"#backend-backup","children":[]},{"level":3,"title":"Remove Maintenance Mode","slug":"remove-maintenance-mode","link":"#remove-maintenance-mode","children":[]}]}],"git":{"createdTime":1729782505000,"updatedTime":1729782505000,"contributors":[{"name":"Wolfgang Huß","email":"wolle.huss@pjannto.com","commits":1}]},"readingTime":{"minutes":4.75,"words":1424},"filePathRelative":"deployment/src/kubernetes/Backup.md","localizedDate":"October 24, 2024","excerpt":"\\n<p>One of the most important tasks in managing a running <a href=\\"https://github.com/Ocelot-Social-Community/Ocelot-Social\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">ocelot.social</a> network is backing up the data, e.g. the Neo4j database and the stored image files.</p>\\n<h2>Manual Offline Backup</h2>"}');export{_ as comp,$ as data};
